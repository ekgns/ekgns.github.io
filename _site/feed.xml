<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-08-18T14:59:28+09:00</updated><id>/feed.xml</id><title type="html">콩 농장</title><author><name>Bean</name><email>ekgns14@naver.com</email></author><entry><title type="html">콜렉션 타입</title><link href="/swift/CollectionType/" rel="alternate" type="text/html" title="콜렉션 타입" /><published>2021-08-18T00:00:00+09:00</published><updated>2021-08-18T00:00:00+09:00</updated><id>/swift/CollectionType</id><content type="html" xml:base="/swift/CollectionType/">&lt;h2 id=&quot;데이터들의-집합-모음&quot;&gt;데이터들의 집합 모음&lt;/h2&gt;

&lt;h3 id=&quot;array--데이터-타입의-값을-순서대로-저장&quot;&gt;Array : 데이터 타입의 값을 순서대로 저장&lt;/h3&gt;
&lt;p&gt;숫자 0 부터 시작 ( Why?: index 로 번호를 세는데 0부터 시작이여서) &lt;br /&gt;
키워드 : [ ] (대괄호)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;사용방법 :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. let (이름) : Array&amp;lt;Type&amp;gt; = [값들]
2. let (이름) = [값들]

3. var (이름) : Array&amp;lt;Type&amp;gt; = [값들]
4. var (이름) = [값들]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;ex)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;상수 배열
1.  let name : Array&amp;lt;String&amp;gt; =  [[&quot;Bean&quot;, &quot;Kim&quot;, &quot;Jack&quot;, &quot;Joker&quot;]]
1-1. let name: [String] = [&quot;Bean&quot;, &quot;Kim&quot;, &quot;Jack&quot;, &quot;Joker&quot;]



변수 배열
2.  var name2 : Array&amp;lt;String&amp;gt;  = [&quot;Bean&quot;, &quot;Kim&quot;, &quot;Jack&quot;, &quot;Joker&quot;]
2-1. var name2 : [String] = [&quot;Bean&quot;, &quot;Kim&quot;, &quot;Jack&quot;, &quot;Joker&quot;]
2-2. var name = [&quot;&quot;]  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;추가-방법-&quot;&gt;추가 방법! &lt;br /&gt;&lt;/h4&gt;
&lt;p&gt;상수 배열은 값을 추가 x  &lt;br /&gt; 
변수 배열은 값을 추가 ㅇ&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1.  let name : Array&amp;lt;String&amp;gt; =  [&quot;Bean&quot;, &quot;Kim&quot;, &quot;Jack&quot;, &quot;Joker&quot;]
1-1. let name = [&quot;Bean&quot;, &quot;Kim&quot;, &quot;Jack&quot;, &quot;Joker&quot;]
print(name)
---
결과 : [&quot;Bean&quot;, &quot;Kim&quot;, &quot;Jack&quot;, &quot;Joker&quot;] 
---
name.append(&quot;Luppy&quot;)
name.append(&quot;Messy&quot;)
name.append(&quot;Ryon&quot;)
name.append(&quot;Son&quot;)
print(name)
---
결과 : [&quot;Bean&quot;, &quot;Kim&quot;, &quot;Jack&quot;, &quot;Joker&quot;, &quot;Luppy&quot;, &quot;Messy&quot;, &quot;Ryon&quot;, &quot;Son&quot;]
차례대로 저장당함 
---

--- insert 키위드를 이용 --- 
let name : Array&amp;lt;String&amp;gt; =  [&quot;Bean&quot;, &quot;Kim&quot;, &quot;Jack&quot;, &quot;Joker&quot;]
name.insert(&quot;Rosa&quot;, at: 1) // 1번 인덱스에 로사 추가
print(name)
---
결과 : [&quot;Bean&quot;, &quot;Rosa&quot;, &quot;Kim&quot;, &quot;Jack&quot;, &quot;Joker&quot;]
index    0       1       2      3        4
---

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;일부-삭제-방법-&quot;&gt;일부 삭제 방법 :&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var name : Array&amp;lt;String&amp;gt; =  [&quot;Bean&quot;, &quot;Rosa&quot;, &quot;Kim&quot;, &quot;Jack&quot;, &quot;Joker&quot;]
name.remove(at: 1)
print(name)
---
결과 : [&quot;Bean&quot;, &quot;Kim&quot;, &quot;Jack&quot;, &quot;Joker&quot;]
---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;dictionary--순서없이-key키와-value값이-한-쌍으로-저장&quot;&gt;Dictionary : 순서없이 Key(키)와 Value(값)이 한 쌍으로 저장&lt;/h3&gt;
&lt;p&gt;상수는 추가가 되지 않아서 변수로만 선언&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;사용방법 :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 1. var nameAndAge: [String: Int] = [&quot;String 값&quot;: Int 값, ... ]
 1-1. var nameAndAge = [&quot;String 값&quot;: Int 값, ... ]
 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;ex)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 1. var nameAndAge: [String: Int] = [&quot;Bean&quot;: 20, &quot;Kim&quot;: 19, &quot;Jack&quot;: 4, &quot;Joker&quot;: 38]
 var nameAndAge = [&quot;Bean&quot;: 20, &quot;Kim&quot;: 19, &quot;Jack&quot;: 4, &quot;Joker&quot;: 38]
 print(nameAndAge)
 
 --- 
 결과 : [&quot;Bean&quot;: 20, &quot;Jack&quot;: 4, &quot;Joker&quot;: 38, &quot;Kim&quot;: 19]
 ---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;추가방법-&quot;&gt;추가방법 :&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 1. var nameAndAge: [String: Int] = [&quot;Bean&quot;: 20, &quot;Kim&quot;: 19, &quot;Jack&quot;: 4, &quot;Joker&quot;: 38]
 1-1. var nameAndAge = [&quot;Bean&quot;: 20, &quot;Kim&quot;: 19, &quot;Jack&quot;: 4, &quot;Joker&quot;: 38]

 nameAndAge[&quot;Luppy&quot;] = 18
 nameAndAge[&quot;Messy&quot;] = 32
 nameAndAge[&quot;Ryon&quot;] = 10
 nameAndAge[&quot;Son&quot;] = 30

 print(nameAndAge)

--- 
결과 : [&quot;Messy&quot;: 32, &quot;Ryon&quot;: 10, &quot;Son&quot;: 30, &quot;Jack&quot;: 4, &quot;Joker&quot;: 38, &quot;Bean&quot;: 20, &quot;Luppy&quot;: 18, &quot;Kim&quot;: 19]

*** 순서 상관없이 추가 됨 ***
---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;일부-삭제-방법--1&quot;&gt;일부 삭제 방법 :&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; var nameAndAge =  [&quot;Messy&quot;: 32, &quot;Ryon&quot;: 10, &quot;Son&quot;: 30, &quot;Jack&quot;: 4, &quot;Joker&quot;: 38, &quot;Bean&quot;: 20, &quot;Luppy&quot;: 18, &quot;Kim&quot;: 19]
 
 nameAndAge.removeValue(forKey: &quot;Joker&quot;)
 
 ---
 결과 : [&quot;Messy&quot;: 32, &quot;Son&quot;: 30, &quot;Jack&quot;: 4, &quot;Kim&quot;: 19, &quot;Luppy&quot;: 18, &quot;Ryon&quot;: 10, &quot;Bean&quot;: 20]
 ---

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;set--같은-데이터-타입의-값을-순서-없이-저장&quot;&gt;Set : 같은 데이터 타입의 값을 순서 없이 저장&lt;/h3&gt;
&lt;p&gt;데이터 중복을 허락하지 않는 특징이 있음&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;사용방법 :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var (이름) : set = Set&amp;lt;Type&amp;gt;()  // 축약형 없음


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;ex)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var name: Set = Set&amp;lt;String&amp;gt;()
name.insert(&quot;Bean&quot;)
name.insert(&quot;Rosa&quot;)
name.insert(&quot;Jack&quot;)
name.insert(&quot;Bean&quot;)
name.insert(&quot;Messi&quot;)
print(name)
---
결과: [&quot;Rosa&quot;, &quot;Messi&quot;, &quot;Bean&quot;, &quot;Jack&quot;]
*** Bean을 두번 추가하였으나 한번 밖에 저장되지 않음 *** 
---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;삭제방법&quot;&gt;삭제방법:&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;name.remove(&quot;Bean&quot;)
print(name)
---
결과: [&quot;Rosa&quot;, &quot;Jack&quot;, &quot;Messi&quot;]
---

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Bean</name><email>ekgns14@naver.com</email></author><category term="Swift" /><category term="Swift 기분문법" /><summary type="html">데이터들의 집합 모음</summary></entry><entry><title type="html">변수&amp;amp;상수</title><link href="/swift/let&var/" rel="alternate" type="text/html" title="변수&amp;amp;상수" /><published>2021-08-16T00:00:00+09:00</published><updated>2021-08-16T00:00:00+09:00</updated><id>/swift/let&amp;var</id><content type="html" xml:base="/swift/let&amp;var/">&lt;h3 id=&quot;상수--고정-된-수&quot;&gt;상수 : 고정 된 수&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;사용방법 :
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. let (이름) : &amp;lt;Type&amp;gt; : 값
2. let (이름) = 값
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;ex)
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1.  let name : String =  Bean
(상수) (상수이름) : &amp;lt;타입&amp;gt; =  값
2.  let name2  = Bean
(상수) (상수이름) = 값
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;변수--변화가-가능한-수&quot;&gt;변수 : 변화가 가능한 수&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;사용방법 : var (이름) : &lt;Type&gt; : 값&lt;/Type&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;사용방법 :
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 1. var (이름) : &amp;lt;Type&amp;gt; : 값
 2. var (이름) = 값
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;ex)
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1.  var name : String =  Bean
 (변수) (변수이름) : &amp;lt;타입&amp;gt; =  값
2.  var name2  = Bean
 (변수) (변수이름) = 값
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;차이점&quot;&gt;차이점&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;상수는 변경이 되지 않아 값 변경을 할 수 없음&lt;/li&gt;
  &lt;li&gt;변수는 변경이 가능 해 값을 변경 할 수 있어 나중에 값을 넣어도 됨&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Bean</name><email>ekgns14@naver.com</email></author><category term="Swift" /><category term="Swift 기분문법" /><summary type="html">상수 : 고정 된 수 사용방법 : 1. let (이름) : &amp;lt;Type&amp;gt; : 값 2. let (이름) = 값 ex) 1. let name : String = Bean (상수) (상수이름) : &amp;lt;타입&amp;gt; = 값 2. let name2 = Bean (상수) (상수이름) = 값</summary></entry></feed>